import axios from 'axios';
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

// Notification Service URL (You can replace this with your Notification Service endpoint)
const notificationServiceUrl = 'http://notification-service:5003/api/notifications';

// Function to send a notification for leave request creation
export const sendLeaveRequestNotification = async (userId, leaveRequest) => {
  try {
    const user = await getUserDetails(userId); // Fetch user details like email, name

    const payload = {
      userId: user.id,
      type: 'leave_request_created', // Define a notification type
      message: `Dear ${user.name},\n\nYour leave request has been successfully created. It will be processed by the respective departments.\n\nLeave Details:\nReason: ${leaveRequest.reason}\nFrom: ${leaveRequest.fromDate}\nTo: ${leaveRequest.toDate}`,
    };

    // Send notification to the Notification Service
    await axios.post(notificationServiceUrl, payload);
    console.log('Leave request notification sent to user:', user.email);
  } catch (error) {
    console.error('Error sending leave request notification:', error);
  }
};

// Function to send notification when a leave request is approved or forwarded
export const sendApprovalNotification = async (adminId, userId, newStage) => {
  try {
    const admin = await getUserDetails(adminId); // Admin details
    const user = await getUserDetails(userId); // Student details

    const payload = {
      userId: user.id,
      type: 'leave_request_approval', // Define a notification type
      message: `Dear ${user.name},\n\nYour leave request has been ${newStage === 'done' ? 'approved' : `forwarded to ${newStage}`} by ${admin.name}. Please check the status in your portal.\n\nLeave Details:\nReason: ${user.leaveRequest.reason}\nFrom: ${user.leaveRequest.fromDate}\nTo: ${user.leaveRequest.toDate}`,
    };

    // Send notification to the Notification Service
    await axios.post(notificationServiceUrl, payload);
    console.log('Leave request approval notification sent to user:', user.email);
  } catch (error) {
    console.error('Error sending leave request approval notification:', error);
  }
};

export const sendRejectionNotification = async(userId,message)=>{
  try {
    const user = await getUserDetails(userId); // Student details
    const payload = {
      userId: user.id,
      type: 'leave_request_rejected', // Define a notification type
      message:message,
    };
  } catch (error) {
    console.error('Error sending leave request rejection notification:', error);
  }
}

// Helper function to get user details by userId (You may implement this based on your user model)
const getUserDetails = async (userId) => {
  // Fetch user details from the database, for example
  const user = await prisma.user.findUnique({ where: { id: userId } });
  return user;
};
